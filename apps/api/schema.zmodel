// datasource db {
//     provider = "postgresql"
//     url      = env("DATABASE_URL")
// }

// generator client {
//     provider = "prisma-client-js"
// }

// model User {
//     id            String    @id @default(cuid())
//     auth0Id       String    @unique
//     name          String?
//     email         String?   @unique
//     emailVerified DateTime?
//     image         String?
//     accounts      Account[]
//     sessions      Session[]

//     // @@allow('create,read', true)
//     // @@allow('update,delete', auth() == this)
//     @@allow('all', true)
// }

// model Account {
//     id                String  @id @default(cuid())
//     userId            String
//     type              String
//     provider          String
//     providerAccountId String
//     refresh_token     String? @db.Text
//     access_token      String? @db.Text
//     expires_at        Int?
//     token_type        String?
//     scope             String?
//     id_token          String? @db.Text
//     session_state     String?

//     user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

//     @@unique([provider, providerAccountId])
//     @@allow('all', auth() == user)
// }

// model Session {
//     id           String   @id @default(cuid())
//     sessionToken String   @unique
//     userId       String
//     expires      DateTime
//     user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//     @@allow('all', auth() == user)
// }

// // Add other models as needed



datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String    @id @default(cuid())
    auth0Id       String    @unique
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    @@allow('create,read,update', true)
    @@allow('delete', auth() != null)
}

// We don't need to define Session and Account models for Auth0
// as it handles these externally

// TODO: revert migrations and DB change as this broke eveyrthing
// This is the main entrypoint for your schema definition.
// Visit https://zenstack.dev/ for more information.

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String    @id @default(cuid())
    auth0Id       String    @unique
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    // ZenStack specific rules
    @@allow('create,read,update', true)
    @@allow('delete', auth() != null)
}
