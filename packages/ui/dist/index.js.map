{"version":3,"sources":["#style-inject:#style-inject","../src/styles/base.css","../src/components/Button.tsx"],"names":["styleInject","css","insertAt","head","style","CustomButton","props","jsx","NextUIButton","__spreadValues"],"mappings":";;;;;AACyB,IAAA,CAAA,CAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,oa,WAAa,CAAA,OAE7C,IAAMC,CAAAA,CAAO,QAAS,CAAA,IAAA,EAAQ,QAAS,CAAA,oBAAA,CAAqB,MAAM,CAAA,CAAE,CAAC,CAAA,CAC/DC,CAAQ,CAAA,QAAA,CAAS,cAAc,OAAO,CAAA,CAC5CA,CAAM,CAAA,IAAA,CAAO,UAETF,CAAAA,CAAAA,GAAa,KACXC,EAAAA,CAAAA,CAAK,UACPA,CAAAA,CAAAA,CAAK,YAAaC,CAAAA,CAAAA,CAAOD,CAAK,CAAA,UAAU,CAK1CA,CAAAA,CAAAA,CAAK,WAAYC,CAAAA,CAAK,CAGpBA,CAAAA,CAAAA,CAAM,UACRA,CAAAA,CAAAA,CAAM,UAAW,CAAA,OAAA,CAAUH,CAE3BG,CAAAA,CAAAA,CAAM,WAAY,CAAA,QAAA,CAAS,cAAeH,CAAAA,CAAG,CAAC,EAElD,CCvB8BD,CAAY,CAAA,CAAA;AAAA,CAAiM,CCCrP,CAEO,IAAMK,EAAgBC,CAClBC,EAAAA,cAAAA,CAACC,YAAAC,CAAAA,CAAAA,CAAA,GAAiBH,CAAO,CAAA","file":"index.js","sourcesContent":["\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\"@tailwind base;@tailwind components;@tailwind utilities;@import \\\"@nextui-org/theme/dist/core.css\\\";@import \\\"@nextui-org/theme/dist/light.css\\\";@import \\\"@nextui-org/theme/dist/dark.css\\\";\\n\")","import React from 'react';\nimport { Button as NextUIButton } from '@nextui-org/react';\n\nexport const CustomButton = (props: React.ComponentProps<typeof NextUIButton>) => {\n    return <NextUIButton {...props} />;\n};"]}